apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: fsm
    app.kubernetes.io/name: fsm
    flomesh.io/control-plane: "true"
    flomesh.io/inject: "false"
  name: flomesh
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm
  namespace: flomesh
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-mesh-config-role
  namespace: flomesh
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - secrets
  - configmaps
  - volumes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
  - deletecollection
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - get
  - create
  - watch
  - patch
  - update
- apiGroups:
  - flomesh.io
  resources:
  - clusters
  - proxyprofiles
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - flomesh.io
  resources:
  - clusters/finalizers
  - proxyprofiles/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - clusters/status
  - proxyprofiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - httproutes
  - referencepolicies
  - tcproutes
  - tlsroutes
  - udproutes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/finalizers
  - gateways/finalizers
  - httproutes/finalizers
  - referencepolicies/finalizers
  - tcproutes/finalizers
  - tlsroutes/finalizers
  - udproutes/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - referencepolicies/status
  - tcproutes/status
  - tlsroutes/status
  - udproutes/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fsm-leader-election-role
subjects:
- kind: ServiceAccount
  name: fsm
  namespace: flomesh
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fsm-role
subjects:
- kind: ServiceAccount
  name: fsm
  namespace: flomesh
---
apiVersion: v1
data:
  bootstrap_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceNamespace: kube-system
      resourceName: bootstrap.flomesh.io
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-bootstrap-config
  namespace: flomesh
---
apiVersion: v1
data:
  connector_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    leaderElection:
      leaderElect: true
      resourceNamespace: kube-system
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-connector-config
  namespace: flomesh
---
apiVersion: v1
data:
  manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceNamespace: kube-system
      resourceName: manager.flomesh.io
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-manager-config
  namespace: flomesh
---
apiVersion: v1
data:
  cluster_local.yaml: |-
    apiVersion: flomesh.io/v1alpha1
    kind: Cluster
    metadata:
      name: local
    spec:
      isInCluster: true
  default_proxyprofile.yaml: |-
    apiVersion: flomesh.io/v1alpha1
    kind: ProxyProfile
    metadata:
      name: default-proxyprofile
      labels:
        sidecar.flomesh.io/is-default-proxyprofile: "true"
    spec:
      mode: Remote
      sidecars:
      - name: sidecar
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-manifests-config
  namespace: flomesh
---
apiVersion: v1
data:
  mesh_config.json: |-
    {
      "isControlPlane": true,

      "images": {
        "repository": "quay.io/flomesh",
        "pipyImage": "pipy-ubi8:0.50.0-88",
        "proxyInitImage": "fsm-proxy-init:0.1.8-ubi.6-dev-ubi8",
        "klipperLbImage": "mirrored-klipper-lb-ubi8:v0.3.5"
      },

      "repo": {
        "rootUrl": "http://fsm-repo-service.flomesh.svc:6060",
        "path" : "/repo",
        "apiPath": "/api/v1/repo"
      },

      "serviceAggregator": {
        "addr": "fsm-service-aggregator.flomesh.svc:6767"
      },

      "webhook": {
        "serviceName": "fsm-webhook-service"
      },

      "ingress": {
        "enabled": true,
        "namespaced": false,
        "tls": {
          "enabled": false,
          "sslPassthrough": {
            "enabled": false,
            "upstreamPort": 443
          }
        }
      },

      "gatewayApi": {
        "enabled": false
      },

      "certificate": {
        "manager": "archon"
      },

      "cluster": {
        "region": "default",
        "zone": "default",
        "group": "default",
        "name": "local"
      },

      "serviceLB": {
        "enabled": false
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-mesh-config
  namespace: flomesh
---
apiVersion: v1
binaryData:
  scripts.tar.gz: |
    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
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-repo-init-scripts
  namespace: flomesh
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: fsm-ingress-pipy
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-ingress-pipy-controller
  namespace: flomesh
spec:
  ports:
  - name: http
    nodePort: 30508
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fsm-ingress-pipy
    flomesh.io/app: fsm-ingress-pipy
    ingress.flomesh.io/namespaced: "false"
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: fsm-repo
    app.kubernetes.io/instance: fsm-repo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-repo-service
  namespace: flomesh
spec:
  ports:
  - name: repo
    port: 6060
    protocol: TCP
    targetPort: repo
  selector:
    app: fsm-repo
    flomesh.io/app: fsm-repo
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: fsm-service-aggregator
    app.kubernetes.io/instance: fsm-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-service-aggregator
  namespace: flomesh
spec:
  ports:
  - name: aggregator
    port: 6767
    protocol: TCP
    targetPort: aggregator
  selector:
    app: fsm-bootstrap
    flomesh.io/app: fsm-bootstrap
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: fsm-manager
    app.kubernetes.io/instance: fsm-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-webhook-service
  namespace: flomesh
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app: fsm-manager
    flomesh.io/app: fsm-manager
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: fsm-bootstrap
    app.kubernetes.io/instance: fsm-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-bootstrap
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fsm-bootstrap
      flomesh.io/app: fsm-bootstrap
  template:
    metadata:
      labels:
        app: fsm-bootstrap
        app.kubernetes.io/component: fsm-bootstrap
        app.kubernetes.io/instance: fsm-bootstrap
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: fsm
        app.kubernetes.io/version: 0.1.8-ubi.6-dev
        flomesh.io/app: fsm-bootstrap
        helm.sh/chart: fsm-0.1.8-ubi.6
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - fsm-bootstrap
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --v=5
        env:
        - name: FSM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FSM_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FSM_NAMESPACE
          value: flomesh
        image: quay.io/flomesh/fsm-bootstrap-ubi8:0.1.8-ubi.6-dev
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 6767
          timeoutSeconds: 5
        name: bootstrap
        ports:
        - containerPort: 6767
          name: aggregator
        readinessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 6767
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - mountPath: /repo
          name: shared-repo
      initContainers:
      - command:
        - sh
        - -c
        - |
          tar -C /repo -zxvf /scripts.tar.gz
          kubectl apply -f /crds
          kubectl apply -f /manifests/
        image: quay.io/flomesh/toolbox-ubi8:1.2.0
        imagePullPolicy: IfNotPresent
        name: init
        volumeMounts:
        - mountPath: /scripts.tar.gz
          name: fsm-repo-init-scripts
          subPath: scripts.tar.gz
        - mountPath: /repo
          name: shared-repo
        - mountPath: /manifests
          name: fsm-manifests-config
      priorityClassName: system-node-critical
      serviceAccountName: fsm
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: fsm-repo-init-scripts
        name: fsm-repo-init-scripts
      - configMap:
          name: fsm-manifests-config
        name: fsm-manifests-config
      - emptyDir: {}
        name: shared-repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: fsm-ingress-pipy
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-ingress-pipy
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fsm-ingress-pipy
      flomesh.io/app: fsm-ingress-pipy
      ingress.flomesh.io/namespaced: "false"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fsm-ingress-pipy
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: fsm-ingress-pipy
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: fsm
        app.kubernetes.io/version: 0.1.8-ubi.6-dev
        flomesh.io/app: fsm-ingress-pipy
        helm.sh/chart: fsm-0.1.8-ubi.6
        ingress.flomesh.io/namespaced: "false"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - fsm-ingress-pipy
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --v=5
        env:
        - name: FSM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FSM_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FSM_NAMESPACE
          value: flomesh
        image: quay.io/flomesh/fsm-ingress-pipy-ubi8:0.1.8-ubi.6-dev
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8000
          timeoutSeconds: 5
        name: ingress
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8081
          name: health
        readinessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8000
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "2"
            memory: 1G
          requests:
            cpu: "0.5"
            memory: 128M
      initContainers:
      - command:
        - curl
        - http://fsm-service-aggregator.flomesh.svc:6767/healthz
        - --connect-timeout
        - "2"
        - --retry
        - "50"
        - --retry-connrefused
        - --retry-delay
        - "5"
        image: quay.io/flomesh/curl-ubi8:7.84.0
        imagePullPolicy: IfNotPresent
        name: wait-aggregator
      serviceAccountName: fsm
      terminationGracePeriodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: fsm-manager
    app.kubernetes.io/instance: fsm-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-manager
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fsm-manager
      flomesh.io/app: fsm-manager
  template:
    metadata:
      labels:
        app: fsm-manager
        app.kubernetes.io/component: fsm-manager
        app.kubernetes.io/instance: fsm-manager
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: fsm
        app.kubernetes.io/version: 0.1.8-ubi.6-dev
        flomesh.io/app: fsm-manager
        helm.sh/chart: fsm-0.1.8-ubi.6
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - fsm-manager
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --v=5
        - --config=manager_config.yaml
        command:
        - /manager
        env:
        - name: FSM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FSM_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FSM_NAMESPACE
          value: flomesh
        image: quay.io/flomesh/fsm-manager-ubi8:0.1.8-ubi.6-dev
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 1
          timeoutSeconds: 5
        name: manager
        ports:
        - containerPort: 9443
          name: webhook
        - containerPort: 8081
          name: health
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 2000Mi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /manager_config.yaml
          name: fsm-manager-config
          subPath: manager_config.yaml
      priorityClassName: system-node-critical
      serviceAccountName: fsm
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: fsm-manager-config
        name: fsm-manager-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: fsm-repo
    app.kubernetes.io/instance: fsm-repo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: fsm-repo
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fsm-repo
      flomesh.io/app: fsm-repo
  template:
    metadata:
      labels:
        app: fsm-repo
        app.kubernetes.io/component: fsm-repo
        app.kubernetes.io/instance: fsm-repo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: fsm
        app.kubernetes.io/version: 0.1.8-ubi.6-dev
        flomesh.io/app: fsm-repo
        helm.sh/chart: fsm-0.1.8-ubi.6
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - fsm-repo
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - sh
        - -c
        - |
          /usr/local/bin/pipy --admin-port=6060
        env:
        - name: FSM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FSM_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FSM_NAMESPACE
          value: flomesh
        image: quay.io/flomesh/pipy-ubi8:0.50.0-88
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 1
          tcpSocket:
            port: 6060
          timeoutSeconds: 5
        name: repo
        ports:
        - containerPort: 6060
          name: repo
        readinessProbe:
          initialDelaySeconds: 1
          tcpSocket:
            port: 6060
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20M
      priorityClassName: system-node-critical
      serviceAccountName: fsm
      terminationGracePeriodSeconds: 30
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    pipy.ingress.kubernetes.io/rewrite-target-from: ^/mesh/?
    pipy.ingress.kubernetes.io/rewrite-target-to: /
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: pipy-repo
  namespace: flomesh
spec:
  ingressClassName: pipy
  rules:
  - http:
      paths:
      - backend:
          service:
            name: fsm-repo-service
            port:
              number: 6060
        path: /mesh
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: pipy
spec:
  controller: flomesh.io/ingress-pipy
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: flomesh-mutating-webhook-configuration
webhooks: []
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fsm
    app.kubernetes.io/version: 0.1.8-ubi.6-dev
    helm.sh/chart: fsm-0.1.8-ubi.6
  name: flomesh-validating-webhook-configuration
webhooks: []
