{{- if and .Values.fsm.ingress.enabled (semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if .Values.fsm.ingress.namespaced }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "fsm-ingress-pipy-%s" .Values.nsig.metadata.namespace }}
  namespace: {{ .Values.nsig.metadata.namespace }}
  labels:
    {{- include "fsm.ingress-pipy.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fsm.ingress-pipy.selectorLabels" . | nindent 6 }}
      ingress.flomesh.io/namespaced: {{ .Values.fsm.ingress.namespaced | quote }}
      ingress.flomesh.io/ns: {{ .Values.nsig.metadata.namespace }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "fsm.ingress-pipy.labels" . | nindent 8 }}
        {{- include "fsm.ingress-pipy.selectorLabels" . | nindent 8 }}
        ingress.flomesh.io/namespaced: {{ .Values.fsm.ingress.namespaced | quote }}
        ingress.flomesh.io/ns: {{ .Values.nsig.metadata.namespace }}
    spec:
      initContainers:
      - name: wait-repo
        image: {{ include "fsm.wait-for-it.image" . }}
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - -c
          - |
            /wait-for-it.sh --strict --timeout=0 \
              --host={{- include "fsm.repo-service.host" . }} \
              --port={{- include "fsm.repo-service.port" . }} \
              -- echo "REPO IS READY!"
      - name: wait-manager
        image: {{ include "fsm.wait-for-it.image" . }}
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - -c
          - |
            /wait-for-it.sh --strict --timeout=0 \
              --host={{- include "fsm.webhook-service.host" .}} \
              --port={{ .Values.fsm.services.webhook.port }} \
              -- echo "MANAGER IS READY!"
      - name: wait-aggregator
        image: {{ include "fsm.wait-for-it.image" . }}
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - -c
          - |
            /wait-for-it.sh --strict --timeout=0 \
              --host={{- include "fsm.service-aggregator.host" .}} \
              --port={{ .Values.fsm.services.aggregator.port }} \
              -- echo "AGGREGATOR IS READY!"
      containers:
      - name: ingress
        image: {{ printf "%s/fsm-%s:%s" .Values.fsm.image.repository .Values.fsm.ingress.name (include "fsm.app-version" .) }}
        imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
        ports:
          - name: ingress
            containerPort: {{ .Values.fsm.ingress.service.containerPort }}
          - name: health
            containerPort: 8081
        args:
          - --v={{ default .Values.fsm.logLevel .Values.nsig.spec.logLevel }}
          - --fsm-namespace={{- include "fsm.namespace" . }}
        env:
          - name: INGRESS_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: INGRESS_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- with .Values.nsig.spec.env }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- if .Values.nsig.spec.resources }}
        resources:
          {{- toYaml .Values.nsig.spec.resources | nindent 10 }}
        {{- else }}
        {{- with .Values.fsm.ingress.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- with .Values.fsm.ingress.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ .Values.fsm.ingress.service.containerPort }}
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ .Values.fsm.ingress.service.containerPort }}
      terminationGracePeriodSeconds: 60
      serviceAccountName: {{ default "fsm-namespaced-ingress" .Values.nsig.spec.serviceAccountName }}
      {{- with .Values.fsm.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nsig.spec.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nsig.spec.nodeSelector | nindent 8 }}
      {{- else }}
      {{- with .Values.fsm.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.fsm.affinity.enabled }}
      {{- if .Values.nsig.spec.affinity }}
      affinity:
        {{- toYaml .Values.nsig.spec.affinity | nindent 8 }}
      {{- else }}
      affinity:
        {{- with .Values.fsm.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: flomesh.io/app
                      operator: In
                      values:
                        - {{ printf "%s-%s" .Chart.Name .Values.fsm.ingress.name }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      {{- end }}
      {{- end }}
      {{- if .Values.nsig.spec.tolerations }}
      tolerations:
        {{- toYaml .Values.nsig.spec.tolerations | nindent 8 }}
      {{- else }}
      {{- with .Values.fsm.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
{{- end }}
{{- end }}