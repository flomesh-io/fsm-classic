{{- if and .Values.fsm.ingress.enabled (semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if not .Values.fsm.ingress.namespaced }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.fsm.ingress.service.name }}
  namespace: {{ include "fsm.namespace" . }}
  labels:
    {{- include "fsm.ingress-pipy.labels" . | nindent 4 }}
spec:
  type: {{ .Values.fsm.ingress.service.type }}
  {{- $setNodePorts := (or (eq .Values.fsm.ingress.service.type "NodePort") (eq .Values.fsm.ingress.service.type "LoadBalancer")) }}
  ports:
  {{- if and .Values.fsm.ingress.http (and (not (empty .Values.fsm.ingress.service.port)) (not (empty .Values.fsm.ingress.service.containerPort))) }}
  - name: http
    port: {{ .Values.fsm.ingress.service.port }}
    protocol: TCP
    targetPort: ingress
    {{- if (and $setNodePorts (not (empty .Values.fsm.ingress.service.nodePorts.http))) }}
    nodePort: {{ .Values.fsm.ingress.service.nodePorts.http }}
    {{- end }}
  {{- end }}
  {{- if and .Values.fsm.ingress.tls (and (not (empty .Values.fsm.ingress.service.tlsPort)) (not (empty .Values.fsm.ingress.service.containerTlsPort))) }}
  - name: https
    port: {{ .Values.fsm.ingress.service.tlsPort }}
    protocol: TCP
    targetPort: ingressTls
    {{- if (and $setNodePorts (not (empty .Values.fsm.ingress.service.nodePorts.https))) }}
    nodePort: {{ .Values.fsm.ingress.service.nodePorts.https }}
    {{- end }}
  {{- end }}
  selector:
    {{- include "fsm.ingress-pipy.selectorLabels" . | nindent 4 }}
    ingress.flomesh.io/namespaced: {{ .Values.fsm.ingress.namespaced | quote }}
{{- end }}
{{- end }}