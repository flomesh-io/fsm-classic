# Default values for fsm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fsm:
  version: ""
  namespace: ""
  nameOverride: ""
  fullnameOverride: ""
  logLevel: 2

  image:
    repository: flomesh
    pullPolicy: IfNotPresent
    pullSecrets: []

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "fsm"

  nodeSelector: {}
  tolerations: []
  affinity:
    enabled: true
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/os
            operator: In
            values:
            - linux
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
            - arm64

  commonEnv:
    - name: FSM_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: FSM_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

  pipy:
    imageName: pipy
    tag: 0.90.1-87-nonroot

  toolbox:
    imageName: toolbox
    tag: 1.3.0

  curl:
    imageName: curl
    tag: 7.84.0

  proxyInit:
    name: fsm-proxy-init

  #
  # -- FSM Operator Manager parameters
  manager:
    name: fsm-manager
    # -- FSM Operator Manager's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- FSM Operator Manager's container resource parameters.
    resources:
      limits:
        cpu: 2000m
        memory: 2000Mi
      requests:
        cpu: 200m
        memory: 200Mi
    # -- FSM Operator Manager's pod labels
    podLabels: {}
    podAnnotations: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

  #
  # -- FSM Repo parameters
  repo:
    name: fsm-repo

    # The HTTP schema, can be either http or https
    schema: "http"

    # If it's enabled, it doesn't install the repo deployment in the cluster.
    # It uses the pre-provisioned repo instance.
    preProvision:
      enabled: false
      host: ""
      port: 80

    # -- FSM Repo's replica count (ignored when autoscale.enable is true)
    replicaCount: 1

    # -- FSM Repo's container resource parameters.
    resources:
      limits:
        cpu: 1000m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 20M
    # -- FSM Repo's pod labels
    podLabels: {}
    podAnnotations: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

  #
  # -- FSM Pipy Ingress Controller parameters
  ingress:
    name: fsm-ingress-pipy
    className: "pipy"
    enabled: true
    namespaced: false
    http:
      enabled: true
      port: 80
      containerPort: 8000
      nodePort: 30508
    tls :
      enabled: false
      port: 443
      containerPort: 8443
      nodePort: 30607
      mTLS: false
      sslPassthrough:
        enabled: false
        upstreamPort: 443
    # -- FSM Pipy Ingress Controller's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    service:
      name: fsm-ingress-pipy-controller
      type: LoadBalancer
      annotations: {}
    # -- FSM Pipy Ingress Controller's container resource parameters.
    resources:
      limits:
        cpu: "2"
        memory: "1G"
      requests:
        cpu: "0.5"
        memory: "128M"
    # Extra env variables those will be appended to ingress container
    env:
      - name: GIN_MODE
        value: release
    # -- FSM Pipy Ingress Controller's pod labels
    podLabels: {}
    podAnnotations: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
#        add:
#        - NET_BIND_SERVICE

    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

  gatewayApi:
    enabled: false
    version: v0.4.3

  serviceLB:
    enabled: false
    imageName: mirrored-klipper-lb
    tag: v0.3.5

  flb:
    enabled: false
    strictMode: false
    secretName: fsm-flb-secret
    baseUrl: http://localhost:1337
    username: admin
    password: admin
    defaultCluster: default
    defaultAddressPool: default
    defaultAlgo: rr

  #
  # -- FSM Egress Gateway parameters
  egressGateway:
    enabled: false
    name: fsm-egress-gateway
    # -- FSM Operator Manager's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- FSM Operator Manager's container resource parameters.
    resources:
      limits:
        cpu: 500m
        memory: 128M
      requests:
        cpu: 100m
        memory: 64M
    podLabels: {}
    podAnnotations: {}
    mode: http2tunnel
    port: 1080
    adminPort: 6060
    logLevel: error

  logging:
    enabled: false
    secretName: fsm-logging-secret
    url: http://localhost:8123/ping
    token: "[UNKNOWN]"

  services:
    repo:
      name: fsm-repo-service
      type: ClusterIP
      port: 6060
      containerPort: 6060
    webhook:
      name: fsm-webhook-service
      type: ClusterIP
      port: 443
      containerPort: 9443
    manager:
      name: fsm-manager
      type: ClusterIP

  configmaps:
    repoInit:
      name: fsm-repo-init-scripts
    manager:
      name: fsm-manager-config
      filename: manager_config.yaml
    mesh:
      name: fsm-mesh-config
    manifests:
      name: fsm-manifests-config
    crds:
      name: fsm-crds-resources
    egress:
      name: fsm-egress-gateway-pjs

  certificate:
    caBundleName: flomesh-ca-bundle

certManager:
  enabled: false